// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReversoBD;

namespace ReversoBD.Migrations
{
    [DbContext(typeof(ReversoContexto))]
    [Migration("20211212205458_AreaInvestimentoUsuario")]
    partial class AreaInvestimentoUsuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("ReversoBD.Entities.AreaInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("area_investimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Criptomoedas"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Tesouro Direto"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Fundos Imobiliários"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Renda Fixa"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "CBDs"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Ações"
                        });
                });

            modelBuilder.Entity("ReversoBD.Entities.AreaInvestimentoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAreaInvestimento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAreaInvestimento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("area_investimento_usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("ReversoBD.Entities.PessoaFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("idTipoInvestidor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.HasIndex("idTipoInvestidor");

                    b.ToTable("pessoa_fisica");
                });

            modelBuilder.Entity("ReversoBD.Entities.PessoaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Analisado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("pessoa_juridica");
                });

            modelBuilder.Entity("ReversoBD.Entities.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("telefone");
                });

            modelBuilder.Entity("ReversoBD.Entities.TipoInvestidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("tipo_investidor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Alto Risco"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Médio Risco"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Baixo Risco"
                        });
                });

            modelBuilder.Entity("ReversoBD.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.AreaInvestimentoUsuario", b =>
                {
                    b.HasOne("ReversoBD.Entities.AreaInvestimento", "AreaInvestimento")
                        .WithMany("AreasInvestimentosUsuarios")
                        .HasForeignKey("IdAreaInvestimento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReversoBD.Entities.Usuario", "Usuario")
                        .WithMany("AreasInvestimentosUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AreaInvestimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.Endereco", b =>
                {
                    b.HasOne("ReversoBD.Entities.Usuario", "Usuario")
                        .WithOne("Endereco")
                        .HasForeignKey("ReversoBD.Entities.Endereco", "IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.PessoaFisica", b =>
                {
                    b.HasOne("ReversoBD.Entities.Usuario", "Usuario")
                        .WithOne("PessoaFisica")
                        .HasForeignKey("ReversoBD.Entities.PessoaFisica", "IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReversoBD.Entities.TipoInvestidor", "TipoInvestidor")
                        .WithMany("PessoasFisicas")
                        .HasForeignKey("idTipoInvestidor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoInvestidor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.PessoaJuridica", b =>
                {
                    b.HasOne("ReversoBD.Entities.Usuario", "Usuario")
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("ReversoBD.Entities.PessoaJuridica", "IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.Telefone", b =>
                {
                    b.HasOne("ReversoBD.Entities.Usuario", "Usuario")
                        .WithMany("Telefones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ReversoBD.Entities.AreaInvestimento", b =>
                {
                    b.Navigation("AreasInvestimentosUsuarios");
                });

            modelBuilder.Entity("ReversoBD.Entities.TipoInvestidor", b =>
                {
                    b.Navigation("PessoasFisicas");
                });

            modelBuilder.Entity("ReversoBD.Entities.Usuario", b =>
                {
                    b.Navigation("AreasInvestimentosUsuarios");

                    b.Navigation("Endereco");

                    b.Navigation("PessoaFisica");

                    b.Navigation("PessoaJuridica");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
